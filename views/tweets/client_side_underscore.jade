extend ../tweet_layout

block additional-params
    div.control-group.span10
        label.control-label Render HTML with
        div.controls
            select(name="method",style="width:97%")
                option(value="server") Serverseitig - HTML Erstellung mit JADE
                option(value="js",selected=(params.method==="js"?"selected":undefined)) Clientseitig - HTML Erstellung Ã¼ber Stringkonkatenierung
                option(value="bb",selected=(params.method==="bb"?"selected":undefined)) Clientseitig - BackboneJS
                option(value="ng",selected=(params.method==="ng"?"selected":undefined)) Clientseitig - AngularJS
                option(value="underscore", selected=(params.method==="underscore"?"selected":undefined)) Clientseitig - Templating mit UnderscoreJS


block stats
    p
    | Dom Ladezeit Time&nbsp;
    span#domContentLoaded
        img(src="/img/ajax-loader.gif")
    br
    | Seiten Ladezeit Time &nbsp;
    span#pageLoaded
        img(src="/img/ajax-loader.gif")
    br
    | Renderzeit auf dem Server &nbsp;
    span#templateServerRendered
        img(src="/img/ajax-loader.gif")
    br
    | Renderzeit auf dem Client &nbsp;
    span#templateClientRendered
        img(src="/img/ajax-loader.gif")
    br
    | Json Generierung &nbsp;
    span#jsonRendered
        img(src="/img/ajax-loader.gif")
block tweetcontent
    h2
        |Show&nbsp;
        span.tweet-amount
        |&nbsp;tweets
    ul.tweets
        img(src="/img/ajax-loader.gif")

    a(href="tweets/new") Insert new tweets into Database

block scripts
    script.
        var maxAmount=#{maxAmount},showProfImg=#{showProfImg}
    script(src="/js/jquery.1.10.2.js")
    script(src="/js/underscore.1.4.4.js")
    script(src="/js/app.js")
    script(type="text/template", id="tweetTemplate").
        <li class="tweet">
            <a href="http://twitter.com/<%=user.nic_name%>" class="clearfix">
                <h3>
                    <span class="user-name <%=(user.verified? "verified":"")%>"><%=user.name%></span>
                    <% var date=new Date(created_at) %>
                    am  <%=date.getDay()%>.<%=date.getFullMonth()%> <%=date.getFullYear()%>
                    um  <%=date.getHours()%>:<%=date.getMinutes()%> Uhr
                </h3>
                <div class="user">
                    <img src="<%=(showProfImg?user.profile_image:'/img/default-profile.png')%>">
                    <span class="user-infos">
                        Kommt aus <%=user.location%><br>
                        <%=user.followers%> follower
                    </span>
                </div>
                <div class="text"><%=text%></div>
            </a>
        </li>
    script.
        $(document).on("ready",function(){
            var tweet=new Tweet($("ul.tweets"),{renderMethod:"renderTweetWithUnderscore"});
            tweet.fetch({
                limit:maxAmount,
                img:showProfImg
            },tweet.addAll)
        });
    script.
            var testSaver=new Test(#{saveResults},5,"#{host}/tweets/render#{encodeURIComponent(query)}",#{params.limit || 0},#{params.interval || 1},#{parseInt(params.max) || parseInt(params.limit) || 0},"#{params.testid||false}","Client Side with Underscore");
            window.addEventListener("load",function(){
                var end=+new Date()-start;
                console.log(end,"end loading");
                console.timeEnd("load");
                document.getElementById("pageLoaded").innerHTML=end+"ms";
            })
            window.addEventListener("DOMContentLoaded",function(){
                var end=+new Date()-start;
                console.log(end,"end Dom content loaded");
                console.timeEnd("DOMContentLoaded");
                testSaver.addResult({loadDom:end});
                document.getElementById("domContentLoaded").innerHTML=end+"ms";
            })

            var socket = io.connect('http://localhost:3001');
                socket.on('htmlTemplateRenderingTime', function (data) {
                console.log("HTML",data.time);
                testSaver.addResult({htmlRenderedOnServer:data.time});
                document.getElementById("templateServerRendered").innerHTML=data.time
            });
            socket.on('jsonRenderingTime', function (data) {
                console.log("JSON",data.time);
                testSaver.addResult({jsonRenderedOnServer:data.time});
                document.getElementById("jsonRendered").innerHTML=data.time
            });